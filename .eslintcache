[{"E:\\Bootcamp 2020\\expense_tracker\\src\\index.js":"1","E:\\Bootcamp 2020\\expense_tracker\\src\\app.js":"2","E:\\Bootcamp 2020\\expense_tracker\\src\\component\\details\\details.jsx":"3","E:\\Bootcamp 2020\\expense_tracker\\src\\component\\details\\style.js":"4","E:\\Bootcamp 2020\\expense_tracker\\src\\styles.js":"5","E:\\Bootcamp 2020\\expense_tracker\\src\\component\\Main\\Main.jsx":"6","E:\\Bootcamp 2020\\expense_tracker\\src\\component\\Main\\Form\\Form.jsx":"7","E:\\Bootcamp 2020\\expense_tracker\\src\\component\\Main\\Form\\styles.js":"8","E:\\Bootcamp 2020\\expense_tracker\\src\\component\\Main\\Lists\\List.jsx":"9","E:\\Bootcamp 2020\\expense_tracker\\src\\component\\Main\\Lists\\styles.js":"10","E:\\Bootcamp 2020\\expense_tracker\\src\\Context\\context.js":"11","E:\\Bootcamp 2020\\expense_tracker\\src\\Context\\contextReducer.js":"12","E:\\Bootcamp 2020\\expense_tracker\\src\\Constants\\Categories.js":"13","E:\\Bootcamp 2020\\expense_tracker\\src\\UtilityFunctions\\FormatDate.js":"14","E:\\Bootcamp 2020\\expense_tracker\\src\\useTransaction.js":"15","E:\\Bootcamp 2020\\expense_tracker\\src\\component\\Snackbar\\Snackbar.jsx":"16"},{"size":273,"mtime":1610095800797,"results":"17","hashOfConfig":"18"},{"size":1027,"mtime":1610119698103,"results":"19","hashOfConfig":"18"},{"size":809,"mtime":1610119069501,"results":"20","hashOfConfig":"18"},{"size":256,"mtime":1609858624627,"results":"21","hashOfConfig":"18"},{"size":634,"mtime":1609858443149,"results":"22","hashOfConfig":"18"},{"size":1218,"mtime":1610119033236,"results":"23","hashOfConfig":"18"},{"size":3203,"mtime":1610117671462,"results":"24","hashOfConfig":"18"},{"size":557,"mtime":1609877137149,"results":"25","hashOfConfig":"18"},{"size":1546,"mtime":1610030954784,"results":"26","hashOfConfig":"18"},{"size":499,"mtime":1609877094580,"results":"27","hashOfConfig":"18"},{"size":973,"mtime":1610099597018,"results":"28","hashOfConfig":"18"},{"size":607,"mtime":1610097373241,"results":"29","hashOfConfig":"18"},{"size":1705,"mtime":1609953999536,"results":"30","hashOfConfig":"18"},{"size":376,"mtime":1609956397662,"results":"31","hashOfConfig":"18"},{"size":1186,"mtime":1610035872027,"results":"32","hashOfConfig":"18"},{"size":850,"mtime":1610117820746,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"iopfu2",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"37"},"E:\\Bootcamp 2020\\expense_tracker\\src\\index.js",["75"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\nimport './index.css'\r\nimport {Provider} from './Context/context'\r\n\r\nReactDOM.render(\r\n  \r\n    <Provider>\r\n        <App></App>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);",["76","77"],"E:\\Bootcamp 2020\\expense_tracker\\src\\app.js",[],"E:\\Bootcamp 2020\\expense_tracker\\src\\component\\details\\details.jsx",["78"],"import React from 'react';\r\nimport {Card, CardHeader,CardContent,Typography} from \"@material-ui/core\";\r\nimport {Doughnut} from 'react-chartjs-2';\r\nimport useStyles from './style';\r\nimport useTransaction from '../../useTransaction'\r\n\r\n\r\nconst Details=(title)=>\r\n{\r\n    const classes=useStyles();\r\n    const {total,chartData}=useTransaction(title.title);\r\n    \r\n    return (\r\n        <Card className={title.title == \"Income\" ? classes.income : classes.expense}  >\r\n            <CardHeader title={title.title}/>\r\n                <CardContent>\r\n                    <Typography varient=\"h5\">\r\n                        Rs. {total}\r\n                    </Typography>\r\n                 <Doughnut data={chartData}/>\r\n              \r\n                </CardContent>\r\n        </Card>\r\n    )\r\n   \r\n}\r\nexport default Details","E:\\Bootcamp 2020\\expense_tracker\\src\\component\\details\\style.js",[],"E:\\Bootcamp 2020\\expense_tracker\\src\\styles.js",[],"E:\\Bootcamp 2020\\expense_tracker\\src\\component\\Main\\Main.jsx",[],"E:\\Bootcamp 2020\\expense_tracker\\src\\component\\Main\\Form\\Form.jsx",["79","80"],"import React ,{useState,useContext} from 'react';\r\nimport {TextField, Typography,Grid,Button, FormControl,InputLabel,Select,MenuItem} from '@material-ui/core';\r\nimport useStyles from './styles'\r\nimport {ExpenseTrackerContext} from '../../../Context/context';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {incomeCategories,expenseCategories} from '../../../Constants/Categories';\r\nimport FormatDate from '../../../UtilityFunctions/FormatDate'\r\nimport CustomizedSnackBar from '../../Snackbar/Snackbar';\r\n\r\n\r\nconst Form=()=>{\r\n\r\n    const classes= useStyles();\r\n\r\n    const initialState={\r\n        amount:'',\r\n        category:'',\r\n        type:'Income',\r\n        date: FormatDate(new Date())\r\n    }\r\n\r\n  \r\n    const [FormData, setFormData] = useState(initialState);\r\n    const {AddTransaction}= useContext(ExpenseTrackerContext);\r\n    const [open, setOpen] = React.useState(false);\r\n    const selectedCategory= (FormData.type == 'Income' ? incomeCategories : expenseCategories) ;\r\n    \r\n    const createTransaction=()=>\r\n    {   \r\n        if(Number.isNaN(Number(FormData.amount))|| Number(FormData.amount)==0 || !FormData.date.includes('-')){ \r\n            return;\r\n        }\r\n        const transaction={...FormData,amount:Number(FormData.amount),id: uuidv4()}\r\n        setOpen(true);\r\n        AddTransaction(transaction);\r\n        setFormData(initialState);\r\n\r\n    }\r\n\r\n\r\n\r\n    return(\r\n       <Grid container spacing={2}>\r\n           <CustomizedSnackBar open={open} setOpen={setOpen} />\r\n           <Grid item xs={12}>\r\n               <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n                   \r\n               </Typography>\r\n           </Grid>\r\n           <Grid item xs={6}>\r\n               <FormControl fullWidth>\r\n                    <InputLabel>Type</InputLabel>\r\n                    <Select value={FormData.type} onChange={(e)=> setFormData({...FormData,type:e.target.value})}>\r\n                        <MenuItem value=\"Income\">Income</MenuItem>\r\n                        <MenuItem value=\"Expense\">Expense</MenuItem>\r\n                    </Select>\r\n               </FormControl>\r\n           </Grid>\r\n           <Grid item xs={6}>\r\n               <FormControl fullWidth>\r\n                <InputLabel>Category</InputLabel>\r\n                <Select value={FormData.category} onChange={(e)=> setFormData({...FormData,category:e.target.value})}>\r\n                   {selectedCategory.map((c)=><MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n                </Select>\r\n               </FormControl>\r\n           </Grid>\r\n           <Grid item xs={6}>\r\n                <TextField type=\"number\" label=\"Amount\" fullWidth value={FormData.amount} onChange={(e)=>setFormData({...FormData, amount:e.target.value})}/>\r\n               \r\n           </Grid>\r\n           <Grid item xs={6}>\r\n                <TextField type=\"date\" label=\"Date\" fullWidth value={FormData.date} onChange={(e)=>setFormData({...FormData,date:FormatDate(e.target.value)})}/>\r\n           </Grid>\r\n           <Button className={classes.Button} variant=\"outlined\" color=\"primary\" fullWidth style={{marginTop:'20px'}} onClick={createTransaction}>Create</Button>\r\n       </Grid>\r\n    )\r\n}\r\n\r\nexport default Form;","E:\\Bootcamp 2020\\expense_tracker\\src\\component\\Main\\Form\\styles.js",[],"E:\\Bootcamp 2020\\expense_tracker\\src\\component\\Main\\Lists\\List.jsx",["81"],"import React,{useContext} from 'react';\r\nimport {List as MuiList, ListItem, ListItemAvatar, ListItemText, ListItemSecondaryAction, IconButton,Slide, Avatar} from '@material-ui/core'\r\nimport {Delete,MoneyOff} from '@material-ui/icons';\r\nimport useStyles from './styles';\r\nimport {ExpenseTrackerContext} from '../../../Context/context'\r\nconst List=()=>\r\n{\r\n    const classes = useStyles();\r\n    \r\n    const {DeleteTransaction,Transactions} = useContext(ExpenseTrackerContext);\r\n   \r\n    return(\r\n        <MuiList dense={false} className={classes.list}>\r\n            {Transactions.map((transaction)=>\r\n             <Slide direction='down' in mountOnEnter unmountOnExit key={transaction.id}>\r\n                 <ListItem>\r\n                     <ListItemAvatar>\r\n                         <Avatar className={transaction.type == \"Income\" ? classes.AvatarIncome : classes.AvatarExpense}>\r\n                            <MoneyOff/>\r\n                         </Avatar>\r\n                     </ListItemAvatar>\r\n                     <ListItemText primary={transaction.category} secondary={`Rs ${transaction.amount} - ${transaction.date}`}/>\r\n                     <ListItemSecondaryAction>\r\n                         <IconButton edge=\"end\" aria-label='delete' onClick={()=>DeleteTransaction(transaction.id)}>\r\n                            <Delete/>\r\n                         </IconButton>\r\n                     </ListItemSecondaryAction>\r\n                 </ListItem>\r\n             </Slide>\r\n\r\n            )}\r\n        </MuiList>\r\n\r\n    )\r\n}\r\n\r\nexport default List;","E:\\Bootcamp 2020\\expense_tracker\\src\\component\\Main\\Lists\\styles.js",["82"],"import { formatMs } from \"@material-ui/core\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {red,green} from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme)=>({\r\n\r\n    list:{\r\n        maxHeight:'150px',\r\n        overflow:'auto',\r\n    },\r\n    AvatarIncome:\r\n    {\r\n        color:'#fff',\r\n        backgroundColor:green[500],\r\n    },\r\n    AvatarExpense:{\r\n        color: theme.palette.getContrastText(red[500]),\r\n        backgroundColor:red[500],\r\n    },\r\n    \r\n})\r\n\r\n)","E:\\Bootcamp 2020\\expense_tracker\\src\\Context\\context.js",["83"],"E:\\Bootcamp 2020\\expense_tracker\\src\\Context\\contextReducer.js",["84"],"\r\nconst ContextReducer=(state,action)=>{\r\n\r\n    let Transaction;\r\n    switch (action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            Transaction= state.filter((t)=>t.id !=action.payload);\r\n            localStorage.setItem('transaction',JSON.stringify(Transaction));\r\n            return Transaction;\r\n            \r\n        case 'ADD_TRANSACTION':\r\n\r\n            Transaction=[action.payload,...state];\r\n            localStorage.setItem('transaction',JSON.stringify(Transaction));\r\n            return Transaction\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default ContextReducer;","E:\\Bootcamp 2020\\expense_tracker\\src\\Constants\\Categories.js",[],"E:\\Bootcamp 2020\\expense_tracker\\src\\UtilityFunctions\\FormatDate.js",[],"E:\\Bootcamp 2020\\expense_tracker\\src\\useTransaction.js",["85"],"import { useContext } from 'react';\r\nimport { ExpenseTrackerContext } from './Context/context';\r\n\r\nimport { incomeCategories, expenseCategories, resetCategories } from './Constants/Categories';\r\n\r\nconst useTransaction= (title) => {\r\n    resetCategories();\r\n    const { Transactions } = useContext(ExpenseTrackerContext);\r\n    let AllTransaction = [];\r\n\r\n  let  rightTransactions = Transactions.filter((t)=> t.type === title);\r\n \r\n    \r\n  const total = rightTransactions.reduce((acc, currVal) => (acc += currVal.amount),0);\r\n  const categories = title === 'Income' ? incomeCategories : expenseCategories;\r\n  \r\n\r\n  rightTransactions.forEach((t) => {\r\n    const category = categories.find((c) => c.type === t.category);\r\n   \r\n    if (category) \r\n    {   \r\n        \r\n        category.amount += t.amount;\r\n    }\r\n  });\r\n\r\n  const filteredCategories = categories.filter((sc) => sc.amount > 0);\r\n\r\n  const chartData = {\r\n    datasets: [{\r\n      data: filteredCategories.map((c) => c.amount),\r\n      backgroundColor: filteredCategories.map((c) => c.color),\r\n    }],\r\n    labels: filteredCategories.map((c) => c.type),\r\n  };\r\n\r\n  return {total, chartData };\r\n};\r\n\r\nexport default useTransaction;","E:\\Bootcamp 2020\\expense_tracker\\src\\component\\Snackbar\\Snackbar.jsx",["86"],"import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst CustomizedSnackBar=({open,setOpen})=>\r\n{\r\n\r\n    const handleClose =(event,reason)=>\r\n    {\r\n        if(reason == 'clickaway') return;\r\n       \r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar \r\n                anchorOrigin={{vertical:'top', horizontal:'right'}}\r\n                open={open}\r\n                autoHideDuration={3000}\r\n                onClose={handleClose}\r\n            >\r\n                <MuiAlert onClose={handleClose} severity='success' elevation={6} variant='filled'>\r\n                    Transaction Successfully Created. \r\n                </MuiAlert>                \r\n            </Snackbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomizedSnackBar;",{"ruleId":"87","severity":1,"message":"88","line":6,"column":9,"nodeType":"89","messageId":"90","endLine":6,"endColumn":23},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":14,"column":38,"nodeType":"97","messageId":"98","endLine":14,"endColumn":40},{"ruleId":"95","severity":1,"message":"96","line":26,"column":44,"nodeType":"97","messageId":"98","endLine":26,"endColumn":46},{"ruleId":"95","severity":1,"message":"96","line":30,"column":75,"nodeType":"97","messageId":"98","endLine":30,"endColumn":77},{"ruleId":"95","severity":1,"message":"96","line":18,"column":62,"nodeType":"97","messageId":"98","endLine":18,"endColumn":64},{"ruleId":"87","severity":1,"message":"99","line":1,"column":10,"nodeType":"89","messageId":"90","endLine":1,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":11,"column":27,"nodeType":"97","messageId":"98","endLine":11,"endColumn":29},{"ruleId":"95","severity":1,"message":"100","line":7,"column":49,"nodeType":"97","messageId":"98","endLine":7,"endColumn":51},{"ruleId":"87","severity":1,"message":"101","line":9,"column":9,"nodeType":"89","messageId":"90","endLine":9,"endColumn":23},{"ruleId":"95","severity":1,"message":"96","line":11,"column":19,"nodeType":"97","messageId":"98","endLine":11,"endColumn":21},"no-unused-vars","'SpeechProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["102"],"no-negated-in-lhs",["103"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'formatMs' is defined but never used.","Expected '!==' and instead saw '!='.","'AllTransaction' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]